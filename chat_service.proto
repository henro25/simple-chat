syntax = "proto3";

package chat;

service ChatService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Register(RegisterRequest) returns (LoginResponse);

  // Bi-directional streaming RPC for live updates after logging in or registering
  rpc UpdateStream(stream LiveUpdateRequest) returns (stream LiveUpdate);
}

// Request to subscribe to live updates
message LiveUpdateRequest {
  string username = 1;
}

// Message containing live update data from the server
message LiveUpdate {
  string update_message = 1;
}

// Request for logging in
message RegisterRequest {
  string username = 1;
  string password = 2;
}

// Request for logging in
message LoginRequest {
  string username = 1;
  string password = 2;
}

// Define a message for a user's unread count.
message UserUnread {
  string username = 1;
  int32 unread_count = 2;
}

// Updated LoginResponse to include a page code, the client username,
// and a list of users with their unread counts.
message LoginResponse {
  int32 errno = 1;
  int32 page_code = 2;                  // e.g., 10
  string client_username = 3;           // e.g., "henro"
  repeated UserUnread user_unreads = 4; // List of other users and their unread counts.
}
